from django.db import models

class Artist(models.Model):
    first_name = models.CharField(max_length = 55)
    last_name = models.CharField(max_length = 55)
    biography = models.TextField()
    image = models.ImageField(upload_to = 'media/artist')
    url = models.CharField(max_length = 144)
    created_at = models.DateTimeField(auto_now_add = True, null = True)
    updated_at = models.DateTimeField(auto_now = True, null = True)

    def __str__(self):
        return self.first_name + ' ' + self.last_name
    def __unicode__(self): #Python 2.x
        return self.first_name + ' ' + self.last_name

class Art(models.Model):
    artist = models.ForeignKey(Artist)
    name = models.CharField(max_length = 89)
    image = models.ImageField(upload_to = 'media/art')
    created_at = models.DateTimeField(auto_now_add = True, null = True)
    updated_at = models.DateTimeField(auto_now = True, null = True)

    def __str__(self):
        return self.name
    def __unicode__(self): #Python 2.x
        return self.name

class Person(models.Model):
    first_name = models.CharField(max_length = 55)
    last_name = models.CharField(max_length = 55)
    email = models.CharField(max_length = 89)
    postal_code = models.CharField(max_length = 13)
    mailing_list = models.BooleanField(default = False)
    referrer = models.CharField(max_length = 55)
    created_at = models.DateTimeField(auto_now_add = True, null = True)
    updated_at = models.DateTimeField(auto_now = True, null = True)

    def __str__(self):
        return self.first_name + ' ' + self.last_name
    def __unicode__(self): #Python 2.x
        return self.first_name + ' ' + self.last_name

class Template(models.Model):
    art = models.ForeignKey(Art)
    order = models.IntegerField(default = 0)
    x_coord = models.IntegerField(default = 0)
    y_coord = models.IntegerField(default = 0)
    max_width = models.IntegerField(default = 0)
    max_height = models.IntegerField(default = 0)
    text_color = models.CharField(max_length = 7)
    font_size = models.CharField(max_length = 8)
    font_file = models.CharField(max_length = 288)
    created_at = models.DateTimeField(auto_now_add = True, null = True)
    updated_at = models.DateTimeField(auto_now = True, null = True)

    def __str__(self):
        return self.art.name
    def __unicode__(self): #Python 2.x
        return self.art.name

class Card(models.Model):
    template = models.ForeignKey(Template, null = True)
    recipient = models.ForeignKey(Person, related_name = '+', null = True)
    sender = models.ForeignKey(Person, related_name = '+', null = True)
    hashed_id = models.CharField(max_length = 55, null = True)
    short_url = models.CharField(max_length = 55, null = True)
    message = models.TextField(null = True)
    created_at = models.DateTimeField(auto_now_add = True, null = True)
    updated_at = models.DateTimeField(auto_now = True, null = True)

    def __str__(self):
        return 'From: ' + self.sender.first_name + ' ' + self.sender.last_name + ' To: ' + self.recipient.first_name + ' ' + self.recipient.last_name + ' (' + self.template.art.name + ')'
    def __unicode__(self): #Python 2.x
        return 'From: ' + self.sender.first_name + ' ' + self.sender.last_name + ' To: ' + self.recipient.first_name + ' ' + self.recipient.last_name + ' (' + self.template.art.name + ')'

    def to(self):
        return self.recipient.first_name + ' ' + self.recipient.last_name

    def from_name(self):
        return self.sender.first_name + ' ' + self.sender.last_name
    from_name.short_description = 'From'

    def card(self):
        return self.template.art.name
    card.short_description = 'Template'

